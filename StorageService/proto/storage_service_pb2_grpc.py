# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from StorageService.proto import storage_service_pb2 as StorageService_dot_proto_dot_storage__service__pb2


class StorageStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getValues = channel.unary_unary(
                '/Storage.Storage/getValues',
                request_serializer=StorageService_dot_proto_dot_storage__service__pb2.User.SerializeToString,
                response_deserializer=StorageService_dot_proto_dot_storage__service__pb2.GetDataResponse.FromString,
                )
        self.setValues = channel.unary_unary(
                '/Storage.Storage/setValues',
                request_serializer=StorageService_dot_proto_dot_storage__service__pb2.UserValues.SerializeToString,
                response_deserializer=StorageService_dot_proto_dot_storage__service__pb2.Status.FromString,
                )
        self.removeUser = channel.unary_unary(
                '/Storage.Storage/removeUser',
                request_serializer=StorageService_dot_proto_dot_storage__service__pb2.User.SerializeToString,
                response_deserializer=StorageService_dot_proto_dot_storage__service__pb2.Status.FromString,
                )
        self.addUser = channel.unary_unary(
                '/Storage.Storage/addUser',
                request_serializer=StorageService_dot_proto_dot_storage__service__pb2.User.SerializeToString,
                response_deserializer=StorageService_dot_proto_dot_storage__service__pb2.Status.FromString,
                )
        self.userIsExist = channel.unary_unary(
                '/Storage.Storage/userIsExist',
                request_serializer=StorageService_dot_proto_dot_storage__service__pb2.User.SerializeToString,
                response_deserializer=StorageService_dot_proto_dot_storage__service__pb2.IsExist.FromString,
                )


class StorageServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getValues(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setValues(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def removeUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def userIsExist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StorageServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getValues': grpc.unary_unary_rpc_method_handler(
                    servicer.getValues,
                    request_deserializer=StorageService_dot_proto_dot_storage__service__pb2.User.FromString,
                    response_serializer=StorageService_dot_proto_dot_storage__service__pb2.GetDataResponse.SerializeToString,
            ),
            'setValues': grpc.unary_unary_rpc_method_handler(
                    servicer.setValues,
                    request_deserializer=StorageService_dot_proto_dot_storage__service__pb2.UserValues.FromString,
                    response_serializer=StorageService_dot_proto_dot_storage__service__pb2.Status.SerializeToString,
            ),
            'removeUser': grpc.unary_unary_rpc_method_handler(
                    servicer.removeUser,
                    request_deserializer=StorageService_dot_proto_dot_storage__service__pb2.User.FromString,
                    response_serializer=StorageService_dot_proto_dot_storage__service__pb2.Status.SerializeToString,
            ),
            'addUser': grpc.unary_unary_rpc_method_handler(
                    servicer.addUser,
                    request_deserializer=StorageService_dot_proto_dot_storage__service__pb2.User.FromString,
                    response_serializer=StorageService_dot_proto_dot_storage__service__pb2.Status.SerializeToString,
            ),
            'userIsExist': grpc.unary_unary_rpc_method_handler(
                    servicer.userIsExist,
                    request_deserializer=StorageService_dot_proto_dot_storage__service__pb2.User.FromString,
                    response_serializer=StorageService_dot_proto_dot_storage__service__pb2.IsExist.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Storage.Storage', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Storage(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getValues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Storage.Storage/getValues',
            StorageService_dot_proto_dot_storage__service__pb2.User.SerializeToString,
            StorageService_dot_proto_dot_storage__service__pb2.GetDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def setValues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Storage.Storage/setValues',
            StorageService_dot_proto_dot_storage__service__pb2.UserValues.SerializeToString,
            StorageService_dot_proto_dot_storage__service__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def removeUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Storage.Storage/removeUser',
            StorageService_dot_proto_dot_storage__service__pb2.User.SerializeToString,
            StorageService_dot_proto_dot_storage__service__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def addUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Storage.Storage/addUser',
            StorageService_dot_proto_dot_storage__service__pb2.User.SerializeToString,
            StorageService_dot_proto_dot_storage__service__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def userIsExist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Storage.Storage/userIsExist',
            StorageService_dot_proto_dot_storage__service__pb2.User.SerializeToString,
            StorageService_dot_proto_dot_storage__service__pb2.IsExist.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
